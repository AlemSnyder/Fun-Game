#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragmentColor;
in vec3 normal;
//in vec3 lightDir;

uniform vec3 lightDir;

// Ouput data
out vec3 color;

void main(){

	// Output color = color specified in the vertex shader, 
	// interpolated between all 3 surrounding vertices
	// color = fragmentColor;

	// ambient
    float ambientStrength = 0.4;
    //vec3 ambient = ambientStrength * lightColor;
  	
    // diffuse 
    vec3 norm = normalize(normal); // this might not need to happen
    //vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, normalize(lightDir) ), 0.0);
    //vec3 diffuse = diff * lightColor;
            
    color = (ambientStrength + diff*.6) * fragmentColor;// * lightColor;
    //color = vec4(result, 1.0);
	//color = (normal + vec3(1,1,1) )/2;
}